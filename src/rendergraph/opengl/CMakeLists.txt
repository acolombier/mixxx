add_library(rendergraph_gl
../common/attributeset.cpp
../common/treenode.cpp
../common/node.cpp
../common/opacitynode.cpp
../common/rendergraph/attribute.h
../common/rendergraph/attributeset.h
../common/rendergraph/treenode.h
../common/rendergraph/geometry.h
../common/rendergraph/geometrynode.h
../common/rendergraph/material.h
../common/rendergraph/material/endoftrackmaterial.cpp
../common/rendergraph/material/endoftrackmaterial.h
../common/rendergraph/material/patternmaterial.cpp
../common/rendergraph/material/patternmaterial.h
../common/rendergraph/material/rgbamaterial.cpp
../common/rendergraph/material/rgbamaterial.h
../common/rendergraph/material/rgbmaterial.cpp
../common/rendergraph/material/rgbmaterial.h
../common/rendergraph/material/texturematerial.cpp
../common/rendergraph/material/texturematerial.h
../common/rendergraph/material/unicolormaterial.cpp
../common/rendergraph/material/unicolormaterial.h
../common/rendergraph/materialshader.h
../common/rendergraph/materialtype.h
../common/rendergraph/node.h
../common/rendergraph/opacitynode.h
../common/rendergraph/texture.h
../common/rendergraph/types.h
../common/rendergraph/uniform.h
../common/rendergraph/uniformscache.cpp
../common/rendergraph/uniformscache.h
../common/rendergraph/uniformset.cpp
../common/rendergraph/uniformset.h
../common/types.cpp
backend/baseattributeset.cpp
backend/baseattributeset.h
backend/basegeometry.cpp
backend/basegeometry.h
backend/basegeometrynode.cpp
backend/basegeometrynode.h
backend/basematerial.cpp
backend/basematerial.h
backend/basematerialshader.cpp
backend/basematerialtype.h
backend/basenode.h
backend/baseopacitynode.h
backend/baseopenglnode.cpp
backend/baseopenglnode.h
backend/shadercache.h
backend/basetexture.h
treenode.cpp
engine.cpp
geometry.cpp
geometrynode.cpp
material.cpp
materialshader.cpp
openglnode.cpp
rendergraph/context.h
rendergraph/engine.h
rendergraph/openglnode.h
texture.cpp
)

target_link_libraries(rendergraph_gl PUBLIC
    Qt6::Core
    Qt6::Gui
    Qt6::OpenGL
)

# USE_QSHADER_FOR_GL is set in rendergraph/CMakeLists.txt
if(USE_QSHADER_FOR_GL)
    message(STATUS "Using QShader to load qsb shaders for opengl")
    target_link_libraries(rendergraph_gl PUBLIC Qt6::GuiPrivate)
    target_compile_definitions(rendergraph_gl PRIVATE USE_QSHADER_FOR_GL)
endif()

target_include_directories(rendergraph_gl PUBLIC . ../common)
